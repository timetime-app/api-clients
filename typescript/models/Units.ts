/**
 * timetime
 * timetime API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class Units {
    /**
    * For event types accepting multi-bookings, this sets the maximum number of people/resources that can book / be booked at the same time. Examples:  - Restaurants: This is maximum number of people that can be attended at the same time. - Bikes store: This is the amount of bikes available.
    */
    'availableUnits'?: number;
    'minUnitsPerBooking'?: number;
    /**
    * Whenever the \'availableUnits\' is set, this sets the limit of how many \'units\' can be booked per booking. Examples:  - Restaurants: This the maximum party size that can make a reservation, for example, up to groups of 10 people max. - City tour: The maximum number of people that each of your tour guides can manage.
    */
    'maxUnitsPerBooking'?: number;
    /**
    * Units is a very generic concept, depending on the use case units could be referring to \'people\', to \'bikes\'... etc. The units label is to be able to set a custom label for the units field, that will appear in the booking page next to the \'units\' selector.
    */
    'unitsLabel'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "availableUnits",
            "baseName": "availableUnits",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "minUnitsPerBooking",
            "baseName": "minUnitsPerBooking",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "maxUnitsPerBooking",
            "baseName": "maxUnitsPerBooking",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "unitsLabel",
            "baseName": "unitsLabel",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Units.attributeTypeMap;
    }

    public constructor() {
    }
}

